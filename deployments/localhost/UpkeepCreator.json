{
  "address": "0x0a17FabeA4633ce714F1Fa4a2dcA62C3bAc4758d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ERC677_LINK_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "REGISTRY_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SOURCE",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddressToAutomate",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "upkeepName",
          "type": "string"
        },
        {
          "internalType": "uint32",
          "name": "gasLimit",
          "type": "uint32"
        }
      ],
      "name": "createUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minFundingAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6f99f8c32bfe45b0fb95b6274965964b1f12d392799b8714797ce6884abd0164",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x0a17FabeA4633ce714F1Fa4a2dcA62C3bAc4758d",
    "transactionIndex": 0,
    "gasUsed": "661570",
    "logsBloom": "0x
    "blockHash": "0xcd15e754502281d046281c91445e09aba296323f6d5686a13e2a6842b026b0d8",
    "transactionHash": "0x6f99f8c32bfe45b0fb95b6274965964b1f12d392799b8714797ce6884abd0164",
    "logs": [],
    "blockNumber": 15284251,
    "cumulativeGasUsed": "661570",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x514910771AF9Ca656af840dff83E8264EcF986CA",
    "0x4Cb093f226983713164A62138C3F718A5b595F73"
  ],
  "numDeployments": 1,
  "solcInputHash": "49cf3f921c3b5268b023e6bae0a9df7e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_linkAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ERC677_LINK_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REGISTRY_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SOURCE\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddressToAutomate\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"upkeepName\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"gasLimit\",\"type\":\"uint32\"}],\"name\":\"createUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minFundingAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/upKeep-contract/createUpkeep.sol\":\"UpkeepCreator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"contracts/upKeep-contract/createUpkeep.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity >=0.7.0 <0.9.0;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\\\";\\r\\n\\r\\ninterface ILinkToken {\\r\\n    function transferAndCall(address receiver, uint amount, bytes calldata data) external returns (bool success);\\r\\n    function balanceOf(address user) external view returns(uint);\\r\\n    function approve(address spender, uint amount) external;\\r\\n    function transfer(address _to, uint _amount) external;\\r\\n}\\r\\n\\r\\ninterface KeepersRegistry {\\r\\n    function getRegistrar() external view returns(address);\\r\\n}\\r\\n\\r\\ncontract UpkeepCreator {\\r\\n    address public REGISTRY_ADDRESS;//0x4Cb093f226983713164A62138C3F718A5b595F73; //Kovan testnet \\r\\n    address public ERC677_LINK_ADDRESS;// 0xa36085F69e2889c224210F603D836748e7dC0088; //Kovan testnet (LINK addresses: https://docs.chain.link/docs/link-token-contracts/)\\r\\n    /*\\r\\n    register(\\r\\n        string memory name,\\r\\n        bytes calldata encryptedEmail,\\r\\n        address upkeepContract,\\r\\n        uint32 gasLimit,\\r\\n        address adminAddress,\\r\\n        bytes calldata checkData,\\r\\n        uint96 amount,\\r\\n        uint8 source\\r\\n    )\\r\\n    */\\r\\n\\r\\n    constructor (address _registry, address _linkAddress)  {\\r\\n       REGISTRY_ADDRESS = _registry;\\r\\n       ERC677_LINK_ADDRESS = _linkAddress;\\r\\n    }\\r\\n    bytes4 private constant FUNC_SELECTOR = bytes4(keccak256(\\\"register(string,bytes,address,uint32,address,bytes,uint96,uint8)\\\"));\\r\\n    uint public minFundingAmount = 5000000000000000000; //5 LINK\\r\\n    uint8 public SOURCE = 110;\\r\\n\\r\\n    ILinkToken ERC677Link = ILinkToken(ERC677_LINK_ADDRESS);\\r\\n\\r\\n    //Note: make sure to fund this contract with LINK before calling createUpkeep\\r\\n    function createUpkeep(address contractAddressToAutomate, string memory upkeepName, uint32 gasLimit) external {\\r\\n        address registarAddress = KeepersRegistry(REGISTRY_ADDRESS).getRegistrar();\\r\\n        uint96 amount = uint96(minFundingAmount);\\r\\n        bytes memory data = abi.encodeWithSelector(FUNC_SELECTOR, upkeepName, hex\\\"\\\", contractAddressToAutomate, gasLimit, msg.sender, hex\\\"\\\", amount, SOURCE);\\r\\n        ERC677Link.transferAndCall(registarAddress, minFundingAmount, data);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x7c8ae45f85f924a0a534d1ebecf122e35c36c6ee55916a857e8c09d355c7fd0d\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x6080604052674563918244f40000600255606e600360006101000a81548160ff021916908360ff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561009b57600080fd5b50604051610b37380380610b3783398181016040528101906100bd91906101a8565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e8565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101758261014a565b9050919050565b6101858161016a565b811461019057600080fd5b50565b6000815190506101a28161017c565b92915050565b600080604083850312156101bf576101be610145565b5b60006101cd85828601610193565b92505060206101de85828601610193565b9150509250929050565b610940806101f76000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063501ad9da1461005c578063bd3bf7f31461007a578063c34f5c9114610098578063c791316e146100b4578063f230b4c2146100d2575b600080fd5b6100646100f0565b60405161007191906103a6565b60405180910390f35b610082610116565b60405161008f91906103a6565b60405180910390f35b6100b260048036038101906100ad9190610583565b61013a565b005b6100bc61034c565b6040516100c9919061060b565b60405180910390f35b6100da610352565b6040516100e79190610642565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d3f73346040518163ffffffff1660e01b815260040160206040518083038186803b1580156101a357600080fd5b505afa1580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db9190610672565b90506000600254905060007fc4110e5c9c8ef4fe31f40cd68aa0b3102f9897ff333658e269002c9ad25bb9f48587863386600360009054906101000a900460ff1660405160240161023196959493929190610783565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea084600254846040518463ffffffff1660e01b81526004016102f193929190610867565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034391906108dd565b50505050505050565b60025481565b600360009054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039082610365565b9050919050565b6103a081610385565b82525050565b60006020820190506103bb6000830184610397565b92915050565b6000604051905090565b600080fd5b600080fd5b6103de81610385565b81146103e957600080fd5b50565b6000813590506103fb816103d5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104548261040b565b810181811067ffffffffffffffff821117156104735761047261041c565b5b80604052505050565b60006104866103c1565b9050610492828261044b565b919050565b600067ffffffffffffffff8211156104b2576104b161041c565b5b6104bb8261040b565b9050602081019050919050565b82818337600083830152505050565b60006104ea6104e584610497565b61047c565b90508281526020810184848401111561050657610505610406565b5b6105118482856104c8565b509392505050565b600082601f83011261052e5761052d610401565b5b813561053e8482602086016104d7565b91505092915050565b600063ffffffff82169050919050565b61056081610547565b811461056b57600080fd5b50565b60008135905061057d81610557565b92915050565b60008060006060848603121561059c5761059b6103cb565b5b60006105aa868287016103ec565b935050602084013567ffffffffffffffff8111156105cb576105ca6103d0565b5b6105d786828701610519565b92505060406105e88682870161056e565b9150509250925092565b6000819050919050565b610605816105f2565b82525050565b600060208201905061062060008301846105fc565b92915050565b600060ff82169050919050565b61063c81610626565b82525050565b60006020820190506106576000830184610633565b92915050565b60008151905061066c816103d5565b92915050565b600060208284031215610688576106876103cb565b5b60006106968482850161065d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106d95780820151818401526020810190506106be565b838111156106e8576000848401525b50505050565b60006106f98261069f565b61070381856106aa565b93506107138185602086016106bb565b61071c8161040b565b840191505092915050565b50565b60006107376000836106aa565b915061074282610727565b600082019050919050565b61075681610547565b82525050565b60006bffffffffffffffffffffffff82169050919050565b61077d8161075c565b82525050565b600061010082019050818103600083015261079e81896106ee565b905081810360208301526107b18161072a565b90506107c06040830188610397565b6107cd606083018761074d565b6107da6080830186610397565b81810360a08301526107eb8161072a565b90506107fa60c0830185610774565b61080760e0830184610633565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b600061083982610812565b610843818561081d565b93506108538185602086016106bb565b61085c8161040b565b840191505092915050565b600060608201905061087c6000830186610397565b61088960208301856105fc565b818103604083015261089b818461082e565b9050949350505050565b60008115159050919050565b6108ba816108a5565b81146108c557600080fd5b50565b6000815190506108d7816108b1565b92915050565b6000602082840312156108f3576108f26103cb565b5b6000610901848285016108c8565b9150509291505056fea264697066735822122032fbf30dda6f88ec05330f9c32f83806c2bb714630812ea10e50395f27ed9c3364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063501ad9da1461005c578063bd3bf7f31461007a578063c34f5c9114610098578063c791316e146100b4578063f230b4c2146100d2575b600080fd5b6100646100f0565b60405161007191906103a6565b60405180910390f35b610082610116565b60405161008f91906103a6565b60405180910390f35b6100b260048036038101906100ad9190610583565b61013a565b005b6100bc61034c565b6040516100c9919061060b565b60405180910390f35b6100da610352565b6040516100e79190610642565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d3f73346040518163ffffffff1660e01b815260040160206040518083038186803b1580156101a357600080fd5b505afa1580156101b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101db9190610672565b90506000600254905060007fc4110e5c9c8ef4fe31f40cd68aa0b3102f9897ff333658e269002c9ad25bb9f48587863386600360009054906101000a900460ff1660405160240161023196959493929190610783565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050600360019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634000aea084600254846040518463ffffffff1660e01b81526004016102f193929190610867565b602060405180830381600087803b15801561030b57600080fd5b505af115801561031f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034391906108dd565b50505050505050565b60025481565b600360009054906101000a900460ff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061039082610365565b9050919050565b6103a081610385565b82525050565b60006020820190506103bb6000830184610397565b92915050565b6000604051905090565b600080fd5b600080fd5b6103de81610385565b81146103e957600080fd5b50565b6000813590506103fb816103d5565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104548261040b565b810181811067ffffffffffffffff821117156104735761047261041c565b5b80604052505050565b60006104866103c1565b9050610492828261044b565b919050565b600067ffffffffffffffff8211156104b2576104b161041c565b5b6104bb8261040b565b9050602081019050919050565b82818337600083830152505050565b60006104ea6104e584610497565b61047c565b90508281526020810184848401111561050657610505610406565b5b6105118482856104c8565b509392505050565b600082601f83011261052e5761052d610401565b5b813561053e8482602086016104d7565b91505092915050565b600063ffffffff82169050919050565b61056081610547565b811461056b57600080fd5b50565b60008135905061057d81610557565b92915050565b60008060006060848603121561059c5761059b6103cb565b5b60006105aa868287016103ec565b935050602084013567ffffffffffffffff8111156105cb576105ca6103d0565b5b6105d786828701610519565b92505060406105e88682870161056e565b9150509250925092565b6000819050919050565b610605816105f2565b82525050565b600060208201905061062060008301846105fc565b92915050565b600060ff82169050919050565b61063c81610626565b82525050565b60006020820190506106576000830184610633565b92915050565b60008151905061066c816103d5565b92915050565b600060208284031215610688576106876103cb565b5b60006106968482850161065d565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156106d95780820151818401526020810190506106be565b838111156106e8576000848401525b50505050565b60006106f98261069f565b61070381856106aa565b93506107138185602086016106bb565b61071c8161040b565b840191505092915050565b50565b60006107376000836106aa565b915061074282610727565b600082019050919050565b61075681610547565b82525050565b60006bffffffffffffffffffffffff82169050919050565b61077d8161075c565b82525050565b600061010082019050818103600083015261079e81896106ee565b905081810360208301526107b18161072a565b90506107c06040830188610397565b6107cd606083018761074d565b6107da6080830186610397565b81810360a08301526107eb8161072a565b90506107fa60c0830185610774565b61080760e0830184610633565b979650505050505050565b600081519050919050565b600082825260208201905092915050565b600061083982610812565b610843818561081d565b93506108538185602086016106bb565b61085c8161040b565b840191505092915050565b600060608201905061087c6000830186610397565b61088960208301856105fc565b818103604083015261089b818461082e565b9050949350505050565b60008115159050919050565b6108ba816108a5565b81146108c557600080fd5b50565b6000815190506108d7816108b1565b92915050565b6000602082840312156108f3576108f26103cb565b5b6000610901848285016108c8565b9150509291505056fea264697066735822122032fbf30dda6f88ec05330f9c32f83806c2bb714630812ea10e50395f27ed9c3364736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1067,
        "contract": "contracts/upKeep-contract/createUpkeep.sol:UpkeepCreator",
        "label": "REGISTRY_ADDRESS",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1069,
        "contract": "contracts/upKeep-contract/createUpkeep.sol:UpkeepCreator",
        "label": "ERC677_LINK_ADDRESS",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1096,
        "contract": "contracts/upKeep-contract/createUpkeep.sol:UpkeepCreator",
        "label": "minFundingAmount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1099,
        "contract": "contracts/upKeep-contract/createUpkeep.sol:UpkeepCreator",
        "label": "SOURCE",
        "offset": 0,
        "slot": "3",
        "type": "t_uint8"
      },
      {
        "astId": 1105,
        "contract": "contracts/upKeep-contract/createUpkeep.sol:UpkeepCreator",
        "label": "ERC677Link",
        "offset": 1,
        "slot": "3",
        "type": "t_contract(ILinkToken)1059"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(ILinkToken)1059": {
        "encoding": "inplace",
        "label": "contract ILinkToken",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}